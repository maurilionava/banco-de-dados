SHOW TABLES;
DESC TABELA; --EXIBIR ESTRUTURA DA TABELA

/* CRIAÇÃO DA BASE DE DADOS */
    CREATE DATABASE BASE_DE_DADOS;
    USE BASE_DE_DADOS;

/* CRIAÇÃO DE TABELA */
    CREATE TABLE TABELA_1(
        IDTABELA1 INT PRIMARY KEY AUTO_INCREMENT,
        VAR_NAO_NULA VARCHAR(20) NOT NULL,
        VAR_NULA CHAR(1),
        VAR_UNICA INT UNIQUE,
        VALOR_DECIMAL FLOAT(10,2),    
        FOTOS_E_DOCUMENTOS BLOB, --BLOB BINARY LARGE OBJECT
        TEXTO TEXT()
        -- EXISTE O TIPO ENUM NO MYSQL E CONSTRAINTS EM OUTRAS FERRAMENTAS
    );

/* CHAVE ESTRANGEIRA (FOREIGN KEY) */
    CREATE TABLE TABELA_2(
        IDTABELA2 INT PRIMARY KEY AUTO_INCREMENT,
        VAR_NAO_NULA VARCHAR(20) NOT NULL,
        ID_TABELA1 INT UNIQUE, --RELACIONAMENTO 1:1 'UNIQUE', REMOVER NOS CASOS DE RELACIONAMENTO 1:N
        FOREIGN KEY(ID_TABELA1)
        REFERENCES TABELA_1(IDTABELA1)
    );

/* INSERÇÃO SIMPLES DE REGISTROS COM COLUNAS EXPLÍCITAS OU IMPLÍCITAS */
    INSERT INTO TABELA_MODELO(COLUNA_1, COLUNA_2, COLUNA_3)
    VALUES('xpto', 'm', 123);

    INSERT INTO TABELA_MODELO 
    VALUES('xpto', 'm', 123);

/* INSERÇÃO DE REGISTROS COM CHAVE ESTRANGEIRA */
    INSERT INTO TABELA_1(IDTABELA_1, COLUNA_1, COLUNA_2)
    VALUES('VALOR COLUNA 1', 'VALOR COLUNA 2');

    INSERT INTO TABELA_2(IDTABELA_2, COLUNA_3, COLUNA_4, IDTABELA_1)
    VALUES('VALOR COLUNA 1', 1);

    INSERT INTO TABELA_3(IDTABELA_3, COLUNA_5, COLUNA_6, IDTABELA_1)
    VALUES('VALOR COLUNA 1', 1);

/* SELEÇÃO: FILTRAGEM DE REGISTROS COM INSTRUÇÃO *WHERE* E *LIKE* */
    SELECT * 
    FROM TABELA 
    WHERE (COLUNA_1 IS NULL 
        OR COLUNA_2 IS NOT NULL)
        AND COLUNA_3 LIKE '%VALOR%';

/* SELEÇÃO: FILTRAGEM COM IN */
    SELECT COLUNA
    FROM TABELA
    WHERE COLUNA IN(1,2,3,4);

/* FUNÇÕES */
    --IFNULL(COLUNA, VALOR_DE_SAIDA)
    SELECT IFNULL(COLUNA_1, 'NENHUM VALOR INFORMADO')
    FROM ORIGEM;

    --TRUNCATE
    SELECT TRUNCATE(COLUNA_1, 2)
    FROM ORIGEM;

/* FUNÇÕES DE AGREGAÇÃO */
    --MAX, MIN, AVG
    SELECT MIN(COLUNA_1),
        MAX(COLUNA_2),
        AVG(COLUNA_3)
    FROM ORIGEM;

/* ATUALIZAÇÃO DE REGISTROS */
    UPDATE TABELA
    SET COLUNA_1 = 'VALOR_1'
    WHERE COLUNA_2 = 'VALOR_2';

/* EXCLUSÃO DE REGISTROS */
    DELETE FROM TABELA
    WHERE CONDICAO_1 = 'VALOR';

/* JUNÇÃO COM JOIN */
    SELECT T1.COLUNA_1, T1.COLUNA_2, T2.COLUNA_3, T2.COLUNA_4 --PROJEÇÃO
    FROM TABELA_1 T1 --ORIGEM (SEM BASE CIENTÍFICA)
        INNER JOIN TABELA_2 T2 --JUNÇÃO
        ON T1.IDTABELA_1 = T2.IDTABELA_1
        INNER JOIN TABELA_3 T3 --ALIAS AUXILIA NA PERFORMANCE DO BANCO
        ON T1.IDTABELA_1 = T3.IDTABELA_1
    WHERE T1.COLUNA_1 = 'VALOR' --SELEÇÃO
        AND T2.COLUNA_3 = 'VALOR';

/* DDL DATA DEFINITINION LANGUAGE */
    ALTER TABLE TABELA_1
    CHANGE COLUNA_1 COLUNA1 INT NOT NULL; --CHANGE PARA ALTERAR NOME

    ALTER TABLE TABELA_1
    MODIFY COLUNA_2  VARCHAR(20) NOT NULL; --MODIFY PARA ALTERAR TIPO

    ALTER TABLE TABELA_1
    ADD COLUNA_EXTRA INT UNIQUE NOT NULL;

    ALTER TABLE TABELA_1
    DROP COLUMN COLUNA_EXTRA;

/* VIEW */
    CREATE VIEW AS V_01
        --QUERY

    SELECT * FROM V_01

/* STORED PROCEDURE */
    DELIMITER $
    CREATE PROCEDURE SP_01(P_1 INT, P_2 INT)
        BEGIN
            --QUERY
        END
    $

    DELIMITER ;
    CALL SP_01(0, 1);