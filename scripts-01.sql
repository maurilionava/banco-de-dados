/*
    DIFERENÇAS ENTRE TIPOS
    ESCOLHER O TIPO CORRETO DE UM DADO PERMITE A BASE DE DADOS SER MAIS LEVE E RÁPIDA
    CHAR(n) POSSUI TAMANHO FIXO, PERMITE UMA MELHOR EFICIÊNCIA AO BANCO PORÉM SE ATENTAR AO ESPAÇO NÃO UTILIZADO
    VARCHAR(n) POSSUI TAMANHO VARIÁVEL, MAIOR PROCESSAMENTO

    ENUM: tipo utilizado permitir o agrupamento ou limitação de dados a partir dos comandos GROUP BY e COUNT
    no SQLSERVER utilizar CONSTRAINTS

    utilizar tipos numéricos(INT, FLOAT) somente para colunas onde serão realizados cálculos

    REGISTRO OU TUPLA: é o conjunto formado por colunas e linha

    SELEÇÃO PROJEÇÃO E JUNÇÃO

    DELIMITADOR DE COMANDOS EM SQL ;
*/

/* CRIAÇÃO DA BASE DE DADOS COM INSTRUÇÃO 'CREATE DATABASE' */
CREATE DATABASE BASE_DE_DADOS;
USE BASE_DE_DADOS;

/* CRIAÇÃO DE TABELA COM INSTRUÇÃO *CREATE TABLE* */
CREATE TABLE TABELA_MODELO(
    CHARS_TAMANHO_VARIAVEL VARCHAR(20),
    CHARS_TAMANHO_FIXO CHAR(1),
    VALOR_INTEIRO INT,
    VALOR_DECIMAL FLOAT(10,2),
    --BLOB BINARY LARGE OBJECT
    FOTOS_E_DOCUMENTOS BLOB,
    TEXTO TEXT()
);

SHOW TABLES;
--INSTRUÇÃO PARA VISUALIZAR ESTRUTURA DE TABELA */
DESC TABELA_MODELO;

/*
    INSERÇÃO DE DADOS COM INSTRUÇÃO INSERT
    INSTRUÇÃO COM COLUNAS EXPLÍCITAS OU IMPLÍCITAS
*/
INSERT INTO TABELA_MODELO(COLUNA_1, COLUNA_2, COLUNA_3)
    VALUES('xpto', 'm', 123);

INSERT INTO TABELA_MODELO VALUES('xpto', 'm', 123);

/* FILTRAGEM DOS DADOS COM INSTRUÇÃO *WHERE* */
SELECT * 
FROM TABELA 
WHERE (COLUNA_1 IS NULL 
    OR COLUNA_2 IS NOT NULL)
    AND COLUNA_3 LIKE '%VALOR%';
/*
    OPERADORES DE COMPARAÇÃO:
    = IGUAL A
    <> OU != DIFERENTE DE
    > MAIOR QUE
    < MENOR QUE
    >= MAIOR OU IGUAL A
    <= MENOR OU IGUAL A
*/

/* ATUALIZAÇÃO DOS DADOS COM INSTRUÇÃO *UPDATE* */
UPDATE TABELA
SET COLUNA_1 = 'VALOR_1'
WHERE COLUNA_2 = 'VALOR_2';

/* EXCLUSÃO DE DADOS COM INSTRUÇÃO *DELETE* */
DELETE FROM TABELA
WHERE CONDICAO_1 = 'VALOR_1'
    AND CONDICAO_2 = 'VALOR_2';